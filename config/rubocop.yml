# 自動生成されるものはチェック対象から除外する
AllCops:
  Exclude:
    - "**/vendor/**/*" # rubocop config/default.yml
    - "**/db/fixtures/*.rb"
    - "**/db/schema.rb"
    - "**/db/seeds.rb"
    - "**/db/migrate/*.rb"
    - "**/bin/*"
    - "**/config/**/*"
    - "**/Guardfile"
    - "**/app/helpers/rating_helper.rb"
    - "**/node_modules/**/*"
    - "**/lib/tasks/**/*"
  DisplayCopNames: true
  DisplayStyleGuide: true
  ExtraDetails: true
  NewCops: enable
  StyleGuideBaseURL: https://github.com/rubocop-hq/ruby-style-guide/blob/master/README.adoc

require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec

##################### Style ##################################

# redirect_to xxx and return のイディオムを維持したい
Style/AndOr:
  EnforcedStyle: conditionals

# 日本語のコメントを許可する
Style/AsciiComments:
  Enabled: false

# ドキュメントの無い public class を許可する
Style/Documentation:
  Enabled: false

# !! のイディオムは積極的に使う
Style/DoubleNegation:
  Enabled: false

# 明示的に else で nil を返すのは分かりやすいので許可する
Style/EmptyElse:
  EnforcedStyle: empty

# GuardClauseを強制しない
# https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals
Style/GuardClause:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# rake タスクの順序の hash は rocket を許可する
Style/HashSyntax:
  Exclude:
    - "**/*.rake"
    - "**/Rakefile"

# 条件式の方を意識させたい場合には後置の if/unless を使わない方が分かりやすい
Style/IfUnlessModifier:
  Enabled: false

# scope 等は複数行でも lambda ではなく ->{} で揃えた方が見た目が綺麗
Style/Lambda:
  Enabled: false

Style/MixinUsage:
  Exclude:
    - "**/lib/task_logger.rb"

# 1_000_000 と区切り文字が 2 個以上必要になる場合のみ _ 区切りを必須にする
Style/NumericLiterals:
  MinDigits: 7

# 正規表現にマッチさせた時の特殊変数の置き換えは Regex.last_match ではなく
# 名前付きキャプチャを使って参照したいので auto-correct しない
Style/PerlBackrefs:
  AutoCorrect: false

# 特に model 内において、ローカル変数とメソッド呼び出しの区別をつけた方が分かりやすい場合が多い
Style/RedundantSelf:
  Enabled: false

# 受け取り側で multiple assignment しろというのを明示
Style/RedundantReturn:
  AllowMultipleReturnValues: true

# spec 内は見た目が綺麗になるので許可
Style/Semicolon:
  Exclude:
    - "**/spec/**/*"

# fail と使い分ける必要ナシ
Style/SignalException:
  EnforcedStyle: only_raise

# いくらなんでも inject { |a, e| } は短すぎるので分かりやすい名前をつけたい
Style/SingleLineBlockParams:
  Enabled: false

# rails g spec:*** コマンド経由だと、double quoteになる
Style/StringLiterals:
  Exclude:
    - "**/spec/**/*"

# 複数行の場合はケツカンマを入れる
Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# 複数行の場合は { ... } ではなく do ... end を使うべきというチェック項目
Style/BlockDelimiters:
  Enabled: false

# raise Exception.new(msg)形式を有効とする
Style/RaiseArgs:
  EnforcedStyle: compact

# Checks if there is a magic comment to enforce string literals
Style/FrozenStringLiteralComment:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

##################### Layout ##################################

# ({ と hash を開始した場合に ( の位置にインデントさせる
# そもそも {} が必要ない可能性が高いが Style/BracesAroundHashParameters はチェックしないことにしたので
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# private/protected は一段深くインデントする
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# `||` も align に使うことがあるので追加する
Layout/SpaceAroundOperators:
  AllowForAlignment:
    - "="
    - "=>"
    - "||"

# * migrate
# * jbuilder
# * model の association
# * controller の callback
# 辺りの桁揃えで引っかかるので全体的にチェックしない
Layout/SpaceBeforeFirstArg:
  Enabled: false

# * 警告 120文字
# * 禁止 160文字
# のイメージ
Layout/LineLength:
  Enabled: true
  Max: 160
  Exclude:
    - "**/spec/*/*.rb"

##################### Naming ##################################

# has_ から始まるメソッドは許可する
Naming/PredicateName:
  ForbiddenPrefixes:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

##################### Lint ##################################

Lint/RescueException:
  Exclude:
    - "**/lib/task_logger.rb"

# * 同名のメソッドがある場合にローカル変数に `_` を付ける
# * 一時変数として `_` を付ける
# というテクニックは頻出する
Lint/UnderscorePrefixedVariableName:
  Enabled: false

##################### Metrics ##################################

Metrics/AbcSize:
  Enabled: true
  Max: 30

# 6 は強すぎるので緩める
Metrics/CyclomaticComplexity:
  Enabled: true
  Max: 10

# 分岐の数。ガード句を多用しているとデフォルト 7 だと厳しい
Metrics/PerceivedComplexity:
  Enabled: true
  Max: 10

Metrics/ClassLength:
  Max: 500

Metrics/MethodLength:
  Enabled: true
  Max: 20

Metrics/BlockLength:
  Enabled: true
  Exclude:
    - '**/spec/**/*'

# デフォルト値を明示しないとHoundに怒られる
Rails/FilePath:
  EnforcedStyle: slashes

##################### RSpec ##################################
RSpec/ExampleLength:
  Max: 10

# ネストの最大数(falseにしてもいいくらいだが、念の為)
RSpec/NestedGroups:
  Max: 6

RSpec/LetSetup:
  Enabled: false

RSpec/MessageChain:
  Enabled: false

RSpec/MultipleMemoizedHelpers:
  Enabled: false

RSpec/MultipleExpectations:
  Max: 5

RSpec/BeforeAfterAll:
  Enabled: false

##################### Rails ##################################
Rails/EnvironmentVariableAccess:
  AllowReads: true

# `ago`や`since`がわかりやすいとは限らない
Rails/DurationArithmetic:
  Enabled: false
